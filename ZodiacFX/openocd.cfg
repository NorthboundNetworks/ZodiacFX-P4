# openocd.cfg -- OpenOCD on-chip debugger condiguration for ZodiacFX
# Requires OpenOCD version 0.9.0 or later.

# (Not really sure something this trivial is subject to copyright,
#  but because lawyers, here goes:)
# Copyright (C) Glen Turner, 2016.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Atmel-ICE Basic debugger
# (Replace this section with your own JTAG debugger if you are using
#  something other than the Atmel-ICE debugger purchased from Northbound
#  Networks.)
interface cmsis-dap
# Vendor:Atmel Product:ATAMEL-ICE-BASIC
cmsis_dap_vid_pid 0x03eb 0x2141
# The serial number is optional, but useful if you have multiple JTAG
# debuggers attached to the same machine.
# We don't want real serial numbers ending up on Github, so put a line
# like:
#   cmsis_dap_serial J12300045678
# into openocd.secret. That filename is in .gitignore and so it won't
# be added and committed.
if { [ file exists openocd.secret ] } {
  source openocd.secret
}

# Zodiac FX is a straight-forward SAM4E8C implementation.
set CHIPNAME SAM4E8C
source /usr/share/openocd/scripts/target/at91sam4sXX.cfg

# To write your image to flash:
#   $ telnet localhost 4444
#     > reset halt
#     > flash write_image erase ZodiacFX.bin 0x00400000 bin
# Set boot from flash flag
#     > at91sam4 gpnvm set 1
#     > exit
# Then power-cycle the unit.
# We define some convenience functions to prevent unfortunate typos:
#   From the "telnet localhost 4444" command line:
#     zodiacfx_write_image ZodiacFX.bin
proc zodiacfx_write_image { filename } {
  flash write_image erase $filename 0x00400000 bin
  at91sam4 gpnvm set 1
}
#   From the shell command line:
#     openocd --file openocd.cfg --command "zodiacfx_bin_name ZodiacFX.bin"
#     openocd --file openocd.cfg --command zodiacfx_bin
proc zodiacfx_bin_name { filename } {
  init
  reset init
  zodiacfx_write_image $filename
  reset run
  exit
}
proc zodiacfx_bin { } {
  zodiacfx_bin_name ZodiacFX.bin
}

# To use GDB:
#   $ telnet localhost 4444
#     > halt
#     > exit
#   $ arm-none-eabi-gdb \
#      --symbols=ZodiacFX.elf \
#      --eval-command="target extended-remote localhost:3333"
# This "gdb-attach" hook automates the halt. Alternatively set
# "gdb_memory_map disable" to avoid the need for a halt.
SAM4E8C.cpu configure -event gdb-attach { halt }
